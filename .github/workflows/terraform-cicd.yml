name: 'Terraform CICD'

on:
  push:
    branches:
     - master
  pull_request:
    branches: 
      - master
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-cicd.yml'

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_IN_AUTOMATION: 1
    
jobs:
  plan:
    name: 'Terraform plan'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: terraform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: terraform
          args: |-
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER_NAME }}" -backend-config="key=${{ secrets.TF_BACKEND_KEY }}" -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RESOURCE_GROUP_NAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: terraform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: terraform
          args: |-
            -out=tfplan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload plan
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: tfplan
          path: terraform/tfplan
  apply:
    name: 'Terraform apply'
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'push'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: Download plan
        uses: actions/download-artifact@v1
        with:
          name: tfplan
          path: terraform
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: terraform
          args:
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER_NAME }}" -backend-config="key=${{ secrets.TF_BACKEND_KEY }}" -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RESOURCE_GROUP_NAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: terraform
          args: |-
            tfplan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
