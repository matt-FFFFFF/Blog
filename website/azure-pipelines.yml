# Build and deploy static website

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - website/*
    exclude:
    - website/azure-pipelines.yml
    - website/LICENSE
    - website/.*
    - website/docker-*


variables:
  skipComponentGovernanceDetection: true
  azureSubscription: mattwhiteazuresub
  sasTokenTimeoutInMinutes: 30
  resourceGroup: blog
  frontDoorName: mattwhiteblog
  backendPoolName: blogstatic

stages:
- stage: Build
  displayName: Build website using Hugo
  variables:
    dockerVersion: 19.03.1
    containerImage: klakegg/hugo
  jobs:
  - job: containerbuild
    displayName: Build website using Docker container
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DockerInstaller@0
      inputs:
        dockerVersion: $(dockerVersion)
        releaseType: stable
    - task: Docker@2
      displayName: Docker login
      inputs:
        command: login
        containerRegistry: dockerhub
    - script: |
        export HUGO_VERSION=`cat HUGO_VERSION`
        docker pull $CONTAINER_IMAGE:$HUGO_VERSION-ext
      env:
        CONTAINER_IMAGE: $(containerImage)
      displayName: Docker pull
      workingDirectory: $(Build.Repository.LocalPath)/website
    - script: |
        export HUGO_VERSION=`cat HUGO_VERSION`
        docker run --rm \
                   --interactive \
                   --user $UID:$UID \
                   --volume $PWD:/src \
                   --volume $(Build.ArtifactStagingDirectory):/target \
                   klakegg/hugo:$HUGO_VERSION-ext
      displayName: Docker run (build site)
      workingDirectory: $(Build.Repository.LocalPath)/website
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)
        artifact: website

- stage: Deploy
  displayName: Deploy website to Azure Storage
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - template: azure-pipelines-deploymentjob.yml
    parameters:
      name: westeurope
    
  - template: azure-pipelines-deploymentjob.yml
    parameters:
      name: northeurope

  - job: purgecache
    dependsOn: 
    - westeurope
    - northeurope
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@1
      displayName: Purge cache
      inputs:
        azureSubscription: $(azureSubscription)
        inlineScript: |
          az extension add --name front-door
          az network front-door purge-endpoint --resource-group $(resourceGroup) --name $(frontDoorName) --content-paths "/*" 
        scriptLocation: inlineScript
        failOnStandardError: true