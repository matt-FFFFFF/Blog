# Issue certificates

trigger: none

schedules:
  - cron: "0 0 * * *"
    displayName: Daily certificate issuue or renew
    always: true
    branches:
      include:
        - master

variables:
  skipComponentGovernanceDetection: true
  azureSubscription: mattwhiteazuresub
  letsEncryptEnvironment: LE_STAGE
  azureSubscriptionId: ***REMOVED***

stages:
- stage: Certificate
  displayName: Certificate
  jobs:
  - job: 
    displayName: Issue or renew certificate
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@1
      inputs:
        scriptLocation: inlineScript
        inlineScript: "echo `az account get-access-token --resource 'https://management.core.windows.net' --query accessToken --output tsv` >$(Agent.TempDirectory)/token"
        azureSubscription: $(azureSubscription)
        failOnStandardError: true
    - task: PowerShell@2
      displayName: Install Posh-ACME
      inputs:
        targetType: inline
        script: Install-Module Posh-ACME -Force -Verbose -Scope CurrentUser
        failOnStderr: true
    - script: mkdir Posh-ACME
      workingDirectory: $(Agent.TempDirectory)
      displayName: Make temp directory
    - task: PowerShell@2
      displayName: Posh-ACME
      inputs:
        targetType: filePath
        filePath: certbot/issuecert.ps1
        failOnStderr: true
        workingDirectory: $(System.DefaultWorkingDirectory)/certbot
      env:
        POSHACME_HOME: $(Agent.TempDirectory)/Posh-ACME
        AGENT_TEMP: $(Agent.TempDirectory)
        LE_ENV: $(letsEncryptEnvironment)
        AZURE_SUBSCRIPTION_ID: $(azureSubscriptionId)